!function(t,i){if("function"==typeof define&&define.amd){var o=["lodash","jquery","khoaijs","khoaijs-pre-options","khoaijs-template","khoaijs-waiter","../dialog"];require(o,i)}else i(t._,t.jQuery||t.$,t.Khoai,t.Khoai&&t.Khoai.PreOptions||t.PreOptions,t.Khoai&&t.Khoai.Template||t.Template,t.Khoai&&t.Khoai.Waiter||t.Waiter,t.Khoai&&t.Khoai.Dialog||t.Dialog)}(this,function(t,i,o,e,s,n,a){function d(t,i,o){return'<div class="modal-header '+(i.options.type?"bg-"+i.options.type:"")+'"><button type="button" class="close" onclick="'+o.close_func+'()"><span aria-hidden="true">&times;</span></button><h4 class="modal-title">'+i.options.title+"</h4></div>"}function l(t,i,o){var e=i.getContent(),s=[];return this.options.padding||s.push("padding: 0px;"),s.push("overflow: "+this.options.overflow+";"),['<div class="modal-body" style="',s.join(" "),'">',e,"</div>"].join("")}function r(i,o,e){var s=[],n='<div class="modal-footer" style="text-align: '+this.options.buttons_align+';">',a='<span class="dialog-pending-info text-muted pull-'+("left"===this.options.buttons_align?"right":"left")+'">'+this.options.pending_info+"</span>&nbsp;&nbsp;";return t.each(o.buttons,function(t){s.push(t.render())}),n+=s.join("\n")+a,n+="</div>"}function h(t,i,o){var e={large:"lg",small:"sm"},s="",n=['<div class="modal fade" tabindex="-1" role="dialog" id="<%= dom_id %>" data-dialog-id="',i.id,'" data-draw="<%- draw %>">'];return e.hasOwnProperty(i.options.size)&&(s="modal-"+e[i.options.size]),n.push('<div class="modal-dialog ',this.options.classes," ",s,'">','<div class="modal-content">'),this.options.has_header&&n.push("@HEADER@"),n.push("@BODY@"),this.options.has_footer&&n.push("@FOOTER@"),n.push("</div></div></div>"),n.join("")}function p(t){return{backdrop:!t||"static",keyboard:!t}}function c(){var t,o=p(this.options.close_manual),e=this.getDialog(),s={};s.close_func=n.createFunc(function(){this.getDialog().close()}.bind(this),!0,"Modal: "+e.id+" >>> Header close button"),this.waiter_keys.push(s.close_func),t=this.render(s),i("body").append(t),u(this),i(this.getDOM()).modal(o)}function u(t){var o=i(t.getDOM());o.on("show.bs.modal",function(e){i(e.target).is(o)&&(f++,t.emitEvent("show"))}),o.on("shown.bs.modal",function(e){i(e.target).is(o)&&(i("body .modal-backdrop").last().attr("id","modal-backdrop_"+t.id),t.emitEvent("shown"))}),o.on("hide.bs.modal",function(e){i(e.target).is(o)&&t.emitEvent("hide")}),o.on("hidden.bs.modal",function(e){i(e.target).is(o)&&(t.emitEvent("hidden"),t.getDialog().close())})}function g(){var t=this.getDialog().isCloseable();i(this.getDOM()).find(".modal-header .close").toggleClass("hide",!t)}function _(){if(!i.fn.modal)throw new Error("Dialog Bootstrap template require Bootstrap Modal to work");this.type_prefix="template_dialog_bootstrap",s.call(this),this.options=e.get(a.TEMPLATE_BOOTSTRAP_PRE_OPTIONS_NAME),this.waiter_keys=[],this.setLayout(h),this.setSection("HEADER",d.bind(this)),this.setSection("BODY",l.bind(this)),this.setSection("FOOTER",r.bind(this)),this.mimic(["open","toggle_enable","close","hide","show","update_content"]),this.addListener("open",c.bind(this)),this.addListener("toggle_enable",g.bind(this)),this.addListener("close",function(){n.remove(this.waiter_keys),this.waiter_keys=[],this.getDOM().modal("hide"),this.getDOM().remove(),f=Math.max(0,--f),i("body").toggleClass("modal-open",f>0),f||i("body .modal-backdrop").remove(),i("#modal-backdrop_"+this.id).remove()}),this.addListener("hide",function(){this.getDOM().hide(),i("#modal-backdrop_"+this.id).hide()}),this.addListener("show",function(){this.getDOM().show(),i("#modal-backdrop_"+this.id).show()}),this.addListener("update_content",function(t){this.getDialog().isOpened()&&this.updateContent(t)})}o.util.defineConstant(a,{TEMPLATE_BOOTSTRAP_PRE_OPTIONS_NAME:"Khoai.Dialog.Template.Bootstrap"}),e.define(a.TEMPLATE_BOOTSTRAP_PRE_OPTIONS_NAME,{has_header:!0,has_footer:!0,close_manual:!0,padding:!0,classes:"",overflow:"hidden",buttons_align:"right",pending_info:""});var f=0;o.util.inherit(_,s),o.util.defineConstant(_,"version","0.0.1"),_.prototype.getDOM=function(){var t=this._super.getDOM.call(this);return i(t)},_.prototype.getDialog=function(){return this.dataSource},_.prototype.updateContent=function(t){t||(t=this.getDialog().options.content),i(this.getDOM()).find(".modal-body").html(t)},_.prototype.updatePendingInfo=function(t){i(this.getDOM()).find(".dialog-pending-info").html(t)},s.register(a.TEMPLATE_TYPE,"Bootstrap",_)}),function(t,i){if("function"==typeof define&&define.amd){var o=["lodash","khoaijs","khoaijs-pre-options","khoaijs-template","khoaijs-waiter","../dialog_button"];require(o,i)}else i(t._,t.Khoai,t.PreOptions,t.Template,t.Waiter,t.DialogButton)}(this,function(t,i,o,e,s,n){function a(t,i,o){return i.options.icon?'<span class="<%= option.icon_class %>"><i class="<%= data_source.options.icon %>"></i></span>&nbsp;&nbsp;':""}function d(i,o,e){var s=t.clamp(o.options.size-1,0,4),n=t.times(3*s,t.constant("&nbsp;&nbsp;")).join(""),a="",d=[];return o.isVisible()||d.push("display: none"),a+='<button type="button" id="<%= dom_id %>" data-button-id="<%= data_source.id %>"',a+='data-draw="<%- draw %>" style="'+d.join("; ")+'"',a+='class="btn btn-<%= data_source.options.type %>" data-name="<%= data_source.options.name %>" ',a+='onclick="'+i.click_key+'()"',o.isEnable()||(a+=' disabled="disabled"'),a+=">",a+=n+"@ICON@@LABEL@"+n+"</button>"}function l(){this.type_prefix="template_dialog_button_bootstrap",e.call(this);var t=this;this.options=o.get(n.TEMPLATE_BOOTSTRAP_PRE_OPTIONS_NAME),this.setLayout(d),this.setSection("ICON",a.bind(this)),this.setSection("LABEL",'<span class="<%= option.label_class %>"><%= data_source.options.label %></span>'),this.click_key=s.createFunc(function(){t.getButton().click()}),this.mimic(["toggle","toggle_enable"]),this.addListener("toggle",function(t){this.getDOM().toggle(t.data)}),this.addListener("toggle_enable",function(t){t?this.getDOM().removeAttr("disabled"):this.getDOM().attr("disabled","disabled"),this.getDOM().prop("disabled",!t)})}i.util.defineConstant(n,{TEMPLATE_BOOTSTRAP_PRE_OPTIONS_NAME:"Khoai.DialogButton.Template.Bootstrap"}),o.define(n.TEMPLATE_BOOTSTRAP_PRE_OPTIONS_NAME,{icon_class:"dialog_button_icon",label_class:"dialog_button_label"}),i.util.inherit(l,e),i.util.defineConstant(l,"version","0.0.1"),l.prototype.getDOM=function(){var t=this._super.getDOM.call(this);return jQuery(t)},l.prototype.getButton=function(){return this.dataSource},l.prototype.updateLabel=function(t){this.getDOM().find("."+this.options.label_class).html(t)},l.prototype.updateIcon=function(t){this.getDOM().find("."+this.options.icon_class).html('<i class="'+t+'"></i>')},e.register(n.TEMPLATE_TYPE,"Bootstrap",l)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
