!function(t,i){if("function"==typeof define&&define.amd){var o=["lodash","jquery","khoaijs","khoaijs-pre-options","khoaijs-template","khoaijs-waiter","../dialog_button","../dialog"];require(o,i)}else i(t._,t.jQuery||t.$,t.Khoai,t.Khoai&&t.Khoai.PreOptions||t.PreOptions,t.Khoai&&t.Khoai.Template||t.Template,t.Khoai&&t.Khoai.Waiter||t.Waiter,t.Khoai&&t.Khoai.Ajax||t.Ajax,t.Khoai&&t.Khoai.DialogButton||t.DialogButton,t.Khoai&&t.Khoai.Dialog||t.Dialog)}(this,function(t,i,o,e,n,s,a,d,l){function h(t,i,o){return'<div class="modal-header '+(i.options.type?"bg-"+i.options.type:"")+'"><button type="button" class="close" onclick="'+o.close_func+'()"><span aria-hidden="true">&times;</span></button><h4 class="modal-title">'+i.options.title+"</h4></div>"}function r(t,i,o){var e=i.getContent(),n=[];return this.options.padding||n.push("padding: 0px;"),n.push("overflow: "+this.options.overflow+";"),['<div class="modal-body" style="',n.join(" "),'">',e,"</div>"].join("")}function p(i,o,e){var n=[],s='<div class="modal-footer" style="text-align: '+this.options.buttons_align+';">',a='<span class="dialog-pending-info text-muted pull-'+("left"===this.options.buttons_align?"right":"left")+'">'+this.options.pending_info+"</span>&nbsp;&nbsp;";return t.each(o.buttons,function(t){n.push(t.render())}),s+=n.join("\n")+a,s+="</div>"}function c(t,i,o){var e={large:"lg",small:"sm"},n="",s=['<div class="modal fade" tabindex="-1" role="dialog" id="<%= dom_id %>" data-dialog-id="',i.id,'" data-draw="<%- draw %>">'];return e.hasOwnProperty(i.options.size)&&(n="modal-"+e[i.options.size]),s.push('<div class="modal-dialog ',this.options.classes," ",n,'">','<div class="modal-content">'),this.options.has_header&&s.push("@HEADER@"),s.push("@BODY@"),this.options.has_footer&&s.push("@FOOTER@"),s.push("</div></div></div>"),s.join("")}function u(t){return{backdrop:!t||"static",keyboard:!t}}function g(){var t,o=u(this.options.close_manual),e=this.getDialog(),n={};n.close_func=s.createFunc(function(){this.getDialog().close()}.bind(this),!0,"Modal: "+e.id+" >>> Header close button"),this.waiter_keys.push(n.close_func),t=this.render(n),i("body").append(t),_(this),i(this.getDOM()).modal(o)}function _(t){var o=i(t.getDOM());o.on("show.bs.modal",function(e){i(e.target).is(o)&&(m++,t.emitEvent("show"))}),o.on("shown.bs.modal",function(e){i(e.target).is(o)&&(i("body .modal-backdrop").last().attr("id","modal-backdrop_"+t.id),t.emitEvent("shown"))}),o.on("hide.bs.modal",function(e){i(e.target).is(o)&&t.emitEvent("hide")}),o.on("hidden.bs.modal",function(e){i(e.target).is(o)&&(t.emitEvent("hidden"),t.getDialog().close())})}function f(){var t=this.getDialog().isCloseable();i(this.getDOM()).find(".modal-header .close").toggleClass("hide",!t)}function b(){if(!i.fn.modal)throw new Error("Dialog Bootstrap template require Bootstrap Modal to work");this.type_prefix="template_dialog_bootstrap",n.call(this),this.options=e.get(d.TEMPLATE_BOOTSTRAP_PRE_OPTIONS_NAME),this.waiter_keys=[],this.setLayout(c),this.setSection("HEADER",h.bind(this)),this.setSection("BODY",r.bind(this)),this.setSection("FOOTER",p.bind(this)),this.mimic(["open","toggle_enable","close","hide","show","update_content"]),this.addListener("open",g.bind(this)),this.addListener("toggle_enable",f.bind(this)),this.addListener("close",function(){s.remove(this.waiter_keys),this.waiter_keys=[],this.getDOM().modal("hide"),this.getDOM().remove(),m=Math.max(0,--m),i("body").toggleClass("modal-open",m>0),m||i("body .modal-backdrop").remove(),i("#modal-backdrop_"+this.id).remove()}),this.addListener("hide",function(){this.getDOM().hide(),i("#modal-backdrop_"+this.id).hide()}),this.addListener("show",function(){this.getDOM().show(),i("#modal-backdrop_"+this.id).show()}),this.addListener("update_content",function(t){this.getDialog().isOpened()&&this.updateContent(t)})}o.util.defineConstant(d,{TEMPLATE_BOOTSTRAP_PRE_OPTIONS_NAME:"Khoai.Dialog.Template.Bootstrap"}),e.define(d.TEMPLATE_BOOTSTRAP_PRE_OPTIONS_NAME,{has_header:!0,has_footer:!0,close_manual:!0,padding:!0,classes:"",overflow:"hidden",buttons_align:"right",pending_info:""});var m=0;o.util.inherit(b,n),o.util.defineConstant(b,"version","0.0.1"),b.prototype.getDOM=function(){var t=this._super.getDOM.call(this);return i(t)},b.prototype.getDialog=function(){return this.dataSource},b.prototype.updateContent=function(t){t||(t=this.getDialog().options.content),i(this.getDOM()).find(".modal-body").html(t)},b.prototype.updatePendingInfo=function(t){i(this.getDOM()).find(".dialog-pending-info").html(t)},n.register(l.TEMPLATE_TYPE,"Bootstrap",b)}),function(t,i){if("function"==typeof define&&define.amd){var o=["lodash","khoaijs","khoaijs-pre-options","khoaijs-template","khoaijs-waiter","../dialog_button","../dialog"];require(o,i)}else i(t._,t.Khoai,t.PreOptions,t.Template,t.Waiter,t.DialogButton,t.Dialog)}(this,function(t,i,o,e,n,s,a){function d(t,i,o){return i.options.icon?'<span class="<%= option.icon_class %>"><i class="<%= data_source.options.icon %>"></i></span>&nbsp;&nbsp;':""}function l(i,o,e){var n=t.clamp(o.options.size-1,0,4),s=t.times(3*n,t.constant("&nbsp;&nbsp;")).join(""),a="",d=[];return o.isVisible()||d.push("display: none"),a+='<button type="button" id="<%= dom_id %>" data-button-id="<%= data_source.id %>"',a+='data-draw="<%- draw %>" style="'+d.join("; ")+'"',a+='class="btn btn-<%= data_source.options.type %>" data-name="<%= data_source.options.name %>" ',a+='onclick="'+i.click_key+'()"',o.isEnable()||(a+=' disabled="disabled"'),a+=">",a+=s+"@ICON@@LABEL@"+s+"</button>"}function h(){this.type_prefix="template_dialog_button_bootstrap",e.call(this);var t=this;this.options=o.get(s.TEMPLATE_BOOTSTRAP_PRE_OPTIONS_NAME),this.setLayout(l),this.setSection("ICON",d.bind(this)),this.setSection("LABEL",'<span class="<%= option.label_class %>"><%= data_source.options.label %></span>'),this.click_key=n.createFunc(function(){t.getButton().click()}),this.mimic(["toggle","toggle_enable"]),this.addListener("toggle",function(t){this.getDOM().toggle(t.data)}),this.addListener("toggle_enable",function(t){t?this.getDOM().removeAttr("disabled"):this.getDOM().attr("disabled","disabled"),this.getDOM().prop("disabled",!t)})}i.util.defineConstant(s,{TEMPLATE_BOOTSTRAP_PRE_OPTIONS_NAME:"Khoai.DialogButton.Template.Bootstrap"}),o.define(s.TEMPLATE_BOOTSTRAP_PRE_OPTIONS_NAME,{icon_class:"dialog_button_icon",label_class:"dialog_button_label"}),i.util.inherit(h,e),i.util.defineConstant(h,"version","0.0.1"),h.prototype.getDOM=function(){var t=this._super.getDOM.call(this);return jQuery(t)},h.prototype.getButton=function(){return this.dataSource},h.prototype.updateLabel=function(t){this.getDOM().find("."+this.options.label_class).html(t)},h.prototype.updateIcon=function(t){this.getDOM().find("."+this.options.icon_class).html('<i class="'+t+'"></i>')},e.register(s.TEMPLATE_TYPE,"Bootstrap",h)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
